/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package se.heka1203.main;
 
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author mejan
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindown
     */
    public MainWindow() throws SocketException, UnknownHostException {
        initComponents();
        
        //Creates the jPannel's
        choice = new ChoicePanel();
        chat = new ChatPanel();
        client = new Client(1234, 1234, chat);

        
        //Use the choice Pannel and paint it.
        add(choice, BorderLayout.CENTER);
        pack();
        
        //Action listeners for buttons on start page.
        choice.getTotalButton().addActionListener(new ActionListener(){
            
            @Override
            public void actionPerformed(ActionEvent e) {
                //Set total bool to true.
                client.setTotal();
                //Change window view.
                remove(choice);
                add(chat, BorderLayout.CENTER);
                repaint();
                pack();
            }
        });
        choice.getCausalButton().addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                //Set total bool to false.
                client.setCausal();
                remove(choice);
                add(chat, BorderLayout.CENTER);
                repaint();
                pack();
            }
         
        });
        
        
        chat.getReChoice().addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    client.leaveGroup();
                } catch (InterruptedException ex) {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
                remove(chat);
                add(choice, BorderLayout.CENTER);
                repaint();
                pack();
            }
        });
        
        chat.getSendButton().addActionListener(new ActionListener(){

            @Override
            public void actionPerformed(ActionEvent e) {
                String text = chat.getSendTextField().getText();
                if(!text.isEmpty()){
                    try {
                        client.sendMessage(text);
                    } catch (IOException ex) {
                        Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                    }                    
                }

            }
            
        });
        ActionListener createGroupListener = new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                String groupId = chat.getGroupTextField().getText();
                if(!groupId.isEmpty()){
                    try {
                        client.joinGroup(groupId);
                        chat.getMessageTextArea().setText("Joined group " + client.getGroupId() + " as client " + client.getId() + "\n");
                    } catch (IOException ex) {
                        Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }            
        };
        chat.getCreateButton().addActionListener(createGroupListener);
        chat.getJoinButton().addActionListener(createGroupListener);
        chat.getLeaveButton().addActionListener(new ActionListener(){

            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    String groupId = client.leaveGroup();
                    chat.getMessageTextArea().setText("Left group " + groupId + ".\n");
                } catch (InterruptedException ex) {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
        });

    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_formMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MainWindow().setVisible(true);
                }
                catch(SocketException se){
                    System.out.println("Couldnt bind socket.");
                }
                catch (UnknownHostException ex) {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }

                }
        });
    }

    //Start panel.
    private ChoicePanel choice;
    //The panel where we'll do the chatting.
    private ChatPanel chat;
    //to keep track if total order is to be used or not.
    private Client client;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
